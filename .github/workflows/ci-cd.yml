name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.0
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        env:
          MYSQL_DATABASE: laravel_db
          MYSQL_ROOT_PASSWORD: Tn@ket321
        ports:
          - 3306:3306
        
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Setup PHP
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo_mysql, bcmath
          ini-values: post_max_size=256M, max_execution_time=300

      # Cache Composer dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      # Install Composer dependencies
      - name: Install Composer dependencies
        run: |
          cd fireX  # Make sure to navigate to the directory containing composer.json
          composer install --prefer-dist --no-interaction

      # Setup .env file
      - name: Setup .env file
        run: |
          cd fireX
          cp .env.example .env
          php artisan key:generate

      # Run database migrations
      - name: Run database migrations
        run: |
          cd fireX  # Navigate to the directory containing artisan
          php artisan migrate --force

      # Install Node.js dependencies and build assets
      - name: Install Node.js dependencies
        run: |
          cd fireX
          npm install
          npm run build

      # Run tests
      - name: Run Laravel tests
        run: |
          cd fireX  # Navigate to the directory containing artisan
          php artisan test
          
      # Deploy to DigitalOcean
      - name: Deploy to DigitalOcean
        env:
          DO_SSH_PRIVATE_KEY: ${{ secrets.DO_SSH_PRIVATE_KEY }}
        run: |
          # Set up SSH agent and add the private key from GitHub secrets
          mkdir -p ~/.ssh
          echo "$DO_SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 159.203.139.164 >> ~/.ssh/known_hosts

          # Connect to your droplet and deploy
          ssh root@159.203.139.164 << 'EOF'
            cd /path/to/your/app
            git pull origin main
            composer install --prefer-dist --no-interaction
            php artisan migrate --force
            npm install
            npm run build
            # Add any other deployment steps you need
          EOF
