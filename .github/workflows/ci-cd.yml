name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.0
        env:
          MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}  
          MYSQL_DATABASE: ${DB_DATABASE}
          MYSQL_USER: ${DB_USERNAME}  
          MYSQL_PASSWORD: ${DB_PASSWORD}
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Copy .env.example to .env
        run: cp fireX/.env.example fireX/.env

      # Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          cd fireX 
          docker compose up -d --build
      # Wait for MySQL to be ready
      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if docker exec firex-db mysqladmin ping -h"db" --silent; then
              echo "MySQL is ready!";
              break;
            fi
            echo "Waiting for MySQL...";
            sleep 5;
          done
      - name: Get container names dynamically
        run: |
          cd fireX  # Ensure we are in the right directory
          # Get the container ID for the 'db' and 'app' services using 'docker compose'
          DB_CONTAINER=$(docker compose ps -q db)
          APP_CONTAINER=$(docker compose ps -q app)
          echo "DB Container ID: $DB_CONTAINER"
          echo "App Container ID: $APP_CONTAINER"

      # Run Laravel Artisan commands using the dynamically obtained container names
      - name: Run Artisan Commands
        run: |
          cd fireX  # Ensure we are in the right directory
          docker exec $APP_CONTAINER php artisan migrate --force
          docker exec $APP_CONTAINER php artisan test
