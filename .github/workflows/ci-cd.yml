name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/SCRUM-62-initialize-the-ci-cd-pipeline
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.0
        env:
        MYSQL_USER: rooty
          MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}  
          MYSQL_DATABASE: ${DB_DATABASE}
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Checkout repository code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up PHP environment
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: pdo_mysql
          tools: composer

      # Install dependencies
      - name: Install Composer dependencies
        working-directory: fireX
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
        
      # Caching Composer dependencies
      - name: Cache Composer dependencies
        uses: actions/cache@v2
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      # Waiting for MySQL to be healthy
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h127.0.0.1 --silent; then
              echo "MySQL is ready!";
              break;
            fi
            echo "Waiting for MySQL to be ready...";
            sleep 5;
          done

      # Set up environment file
      - name: Set up environment file
        working-directory: fireX
        run: |
          cp .env.example .env
          php artisan config:clear
          php artisan cache:clear
          php artisan key:generate

      # Running Laravel migrations
      - name: Run migrations
        working-directory: fireX
        run: php artisan migrate --force

      # Run application tests
      - name: Run tests
        working-directory: fireX
        run: php artisan test
