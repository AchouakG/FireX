name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - feature/*

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:9.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: laravel_db
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Copy .env.example to .env
      - name: Copy .env.example to .env
        run: cp fireX/.env.example fireX/.env

      # Set up Docker Compose
      - name: Set up Docker Compose
        run: |
          cd fireX
          docker compose up -d --build

      # Wait for MySQL to be ready
      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if docker exec $(docker compose ps -q db) mysqladmin ping -h"db" --silent; then
              echo "MySQL is ready!";
              break;
            fi
            echo "Waiting for MySQL...";
            sleep 5;
          done

      # Get container IDs dynamically
      - name: Get container IDs dynamically
        run: |
          cd fireX
          DB_CONTAINER=$(docker compose ps -q db)
          APP_CONTAINER=$(docker compose ps -q web)
          echo "DB_CONTAINER=$DB_CONTAINER" >> $GITHUB_ENV
          echo "APP_CONTAINER=$APP_CONTAINER"

      # Install Composer dependencies inside the container
      - name: Install Composer dependencies
        run: |
          cd fireX
          docker exec "$APP_CONTAINER" composer install --no-interaction

      # Run Artisan Commands
      - name: Run Artisan Commands
        run: |
          cd fireX
          docker exec "$APP_CONTAINER" php artisan migrate --force
          docker exec "$APP_CONTAINER" php artisan test
